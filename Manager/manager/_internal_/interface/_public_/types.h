/* ************************************************************************** */
/*                                                                            */
/*                                                        :::      ::::::::   */
/*   types.h                                            :+:      :+:    :+:   */
/*                                                    +:+ +:+         +:+     */
/*   By: nduvoid <nduvoid@student.42mulhouse.fr>    +#+  +:+       +#+        */
/*                                                +#+#+#+#+#+   +#+           */
/*   Created: 2025/07/28 11:24:41 by nduvoid           #+#    #+#             */
/*   Updated: 2025/07/28 11:46:13 by nduvoid          ###   ########.fr       */
/*                                                                            */
/* ************************************************************************** */

#ifndef TYPES_H
# define TYPES_H
# undef  TYPES_H

# pragma once

/* ************************************************************************** */
/*                                 Headers                                    */
/* ************************************************************************** */

/* -----| Systems   |----- */
	//...

/* -----| Globals   |----- */
	//...

/* -----| Internals |----- */
# include "../_internal_/visual/_public_/visual.h"
# include "../_internal_/server/_public_/server.h"
# include "../_internal_/interraction/_public_/interraction.h"

/* -----| Modules  |----- */
	//...

/* ************************************************************************** */
/*                                 Typedefs                                   */
/* ************************************************************************** */

typedef struct s_interface	t_interface;

/* ************************************************************************** */
/*                                 Structs                                    */
/* ************************************************************************** */

struct	s_interface
{
	t_visual		visual;
	t_server		server;
	t_interraction	interraction;
};

/* ************************************************************************** */
/*                                 Prototypes                                 */
/* ************************************************************************** */

//...

#endif /* !TYPES_H */