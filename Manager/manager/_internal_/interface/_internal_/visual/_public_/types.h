/* ************************************************************************** */
/*                                                                            */
/*                                                        :::      ::::::::   */
/*   types.h                                            :+:      :+:    :+:   */
/*                                                    +:+ +:+         +:+     */
/*   By: nduvoid <nduvoid@student.42mulhouse.fr>    +#+  +:+       +#+        */
/*                                                +#+#+#+#+#+   +#+           */
/*   Created: 2025/07/28 11:24:41 by nduvoid           #+#    #+#             */
/*   Updated: 2025/07/28 11:33:21 by nduvoid          ###   ########.fr       */
/*                                                                            */
/* ************************************************************************** */

#ifndef TYPES_H
# define TYPES_H
# undef  TYPES_H

# pragma once

/* ************************************************************************** */
/*                                 Headers                                    */
/* ************************************************************************** */

/* -----| Systems   |----- */
	//...

/* -----| Globals   |----- */
	//...

/* -----| Internals |----- */
# include "../_internal_/types__.h"
# include "../_internal_/visual__.h"

/* -----| Modules  |----- */
	//...

/* ************************************************************************** */
/*                                 Typedefs                                   */
/* ************************************************************************** */

typedef struct s_visual	t_visual;

/* ************************************************************************** */
/*                                 Structs                                    */
/* ************************************************************************** */


struct	s_visual
{
	int		(*printf)(const char *format, ...);
	int		(*fprintf)(int fd, const char *format, ...);
	int		(*sprintf)(char *buffer, const char *format, ...);
	void	(*perror)(const char *str, ...);
};

/* ************************************************************************** */
/*                                 Prototypes                                 */
/* ************************************************************************** */

extern char	__visual_init(
				t_visual *restrict const visual__
				);

#endif /* !TYPES_H */